{
  "app": "npx ts-node --prefer-ts-exts bin/deployment.ts",
  "watch": {
    "include": ["**"],
    "exclude": [
      "README.md",
      "cdk*.json",
      "**/*.d.ts",
      "**/*.js",
      "tsconfig.json",
      "package*.json",
      "yarn.lock",
      "node_modules",
      "test"
    ]
  },
  "context": {
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:target-partitions": ["aws", "aws-cn"],
    "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": true,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "globals": {
      "appName": "gro-demo-001",
      "desc": "A demo app presenting a simple formik form to take user input and store the same in S3 bucket. Uses lambda to generate tokens",
      "owner": "grohit.net",
      "serverless": "Yes",
      "domainName": "name of the domain registered with route53 underwhich subdomain for api and ui will be made",
      "ssmParamKey4SSLCertArn": "Store CertificateArn in SSMParameter and provide the Parameter name here",
      "infoStoreBucketName": "bucket-name-where-ui-will-upload"
    },
    "environments": [
      {
        "environment": "dev",
        "uiDomain": "dev-ui-domain",
        "uiUrl": "dev-ui-url",
        "apiDomain": "dev-api-domain",
        "apiUrl": "dev-api-url"
      },
      {
        "environment": "prod",
        "uiDomain": "prod-ui-domain",
        "uiUrl": "prod-ui-url",
        "apiDomain": "prod-api-domain",
        "apiUrl": "prod-api-url"
      }
    ]
  }
}
